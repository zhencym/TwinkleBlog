#配置端口
server:
#  port: 8666
  port: 8777
  servlet:
    session:
      timeout: 21600

#日志配置
logging:
  level:
    org.apache.kafka.common.serialization.stringDeserializer: ERROR
    org.apache.kafka.clients.consumer. RangeAssignor: ERROR
    org.apache.kafka: ERROR
    com.yuming.blog.dao : DEBUG #dao位置

#配置mysql数据库
spring:
#  profiles:
#    active: dev #开发环境, 上线后删除
  aop:
    proxy-target-class: false #禁用CGLIB代理，使用java内置动态代理。为了能使用WebSocket
  application:
    name: MyBlog
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    #url: jdbc:mysql://192.168.95.137:3306/blog?serverTimezone=GMT%2B8&allowMultiQueries=true
    #url: jdbc:mysql://mysql:3306/blog?serverTimezone=GMT%2B8&allowMultiQueries=true
    url: jdbc:mysql://43.139.142.79:3306/blog?serverTimezone=GMT%2B8&allowMultiQueries=true
    #43.139.142.79
    username: root
    #password: 666666
    password: cymsql66
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  #redis配置
  redis:
    port: 6379
    #host: 192.168.95.137
    #host: redis
    host: 43.139.142.79
    password: credis66
    database: 1
    #配置redis连接超时配置时间,大于Redis服务器配置的 tcp-keepalive = 300 存活时间即可
    lettuce:
      shutdown-timeout: 301
  #邮箱配置
  mail:
    host: smtp.qq.com
#    username: 1540504095@qq.com
#    password: sqkiztpsoovohiec
    username: 1540504013@qq.com
    password: brrvzzwpouzkjbhd
    default-encoding: UTF-8
    port: 587
    properties:
      mail:
      smtp:
      auth: true
      socketFactory:
      class: javax.net.ssl.SSLSocketFactory
  #图片大小限制
  servlet:
    multipart:
      max-file-size: 40MB
      max-request-size: 100MB
  #配置MQ
  kafka:
    bootstrap-servers: 43.139.142.79:9092
    producer:
      # 发生错误后，消息重发的次数。
      retries: 1
      # 重试的时间间隔
      retry-backoff-ms: 1000
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
    consumer:
      # 发生错误后，消息最大重试次数。
      max-attempts: 3
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false


#搜索模式
search:
  mode: mysql

#配置MybatisPlus
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

#第三方配置信息,待开发
qq:
  app-id: "1540504013"
  user-info-url: "https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}"


aliyun:
  url: "https://cymoss.oss-cn-guangzhou.aliyuncs.com/"
  endpoint: "https://oss-cn-guangzhou.aliyuncs.com/"
  accessKeyId: "LTAI5t6wBmw7VEosqChdFsmU"
  accessKeySecret: "tI6JPtOIA0vZ5l3fDknayLaZ51X6bP"
  bucketName: "cymoss"
